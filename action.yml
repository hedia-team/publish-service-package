name: "Autobump version and publish"
description: "Hedia's npm packages autobumper & publisher"

inputs:
  GITHUB_TOKEN:
    description: "GitHub token required to publish packages"
    required: true
  NPM_TOKEN:
    description: "NPM token required to npm install"
    required: true
runs:
  using: "composite"
  steps:
    - name: Set git identity
      run: |
        git config --global user.email ci@hedia.co
        git config --global user.name HediaBot
      shell: bash
    - name: Install dependency
      run: sudo apt-get -y install skopeo
      shell: bash
    - name: Get pwd
      id: get-path
      run: |
        ACTION_PATH=$(pwd)
        echo ::set-output name=path::"$ACTION_PATH"
      shell: bash
    - name: Login to github registry
      run: |
        mkdir skopeo-cache && \
        echo ${{ inputs.GITHUB_TOKEN }} | skopeo login -u hedia-bot --password-stdin ghcr.io
        echo ${{ inputs.GITHUB_TOKEN }} | docker login ghcr.io --username phanatic --password-stdin
      shell: bash
      env:
        XDG_RUNTIME_DIR: ${{ steps.get-path.outputs.path }}/skopeo-cache
    - name: Extract package version
      id: package-version
      run: |
        initialPackageJSON=$(sed -nE 's/^\s*"version": "([0-9]+.[0-9]+.[0-9]+).*?",$/\1/p' package.json)
        echo ::set-output name=version::"$initialPackageJSON"
      shell: bash
    - name: Save latest version to variable
      id: before-build
      run: |
        inspectOutput=$(skopeo inspect -f {{.Labels.org.opencontainers.image.version}} docker://ghcr.io/hedia-team/${{ github.event.repository.name }}:latest)
        version=$([ inspectOutput == "<no value>"  ] && echo "0.0.0" || echo "$version")
        echo "Version set to: $version"
        echo ::set-output name=version::"$version"
      env:
        XDG_RUNTIME_DIR: ${{ steps.get-path.outputs.path }}/skopeo-cache
      shell: bash
    - name: Check version and push build
      run: |
        if [[ ${{ steps.before-build.outputs.version }} == ${{ steps.package-version.outputs.version }} ]]; then
        echo "Build version already exist, please bump!"
        exit 1
        fi
        exit 0
      env:
        XDG_RUNTIME_DIR: ${{ steps.get-path.outputs.path }}/skopeo-cache
      shell: bash
    - name: Build docker image
      run: |
        docker build -f Dockerfile \
        -t ghcr.io/hedia-team/${{github.event.repository.name}}:${{steps.package-version.outputs.version}} \
        -t ghcr.io/hedia-team/${{github.event.repository.name}}:latest \
        --build-arg NPM_TOKEN=${{inputs.NPM_TOKEN}} \
        --build-arg BUILD_VERSION=${{steps.package-version.outputs.version}} \
        .
      shell: bash
    - name: Check version and push build
      run: |
        docker push ghcr.io/hedia-team/${{github.event.repository.name}} --all-tags
      env:
        XDG_RUNTIME_DIR: ${{ steps.get-path.outputs.path }}/skopeo-cache
      shell: bash
